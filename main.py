import requests
from bs4 import BeautifulSoup
#import datetime
import json
import os
#import pytz
import random

FILENAME = "events.json"
message = ''


def send_telegram_channel(message):
    token = '6618174909:AAGdvPe3cC9vORvalMEh5-LiRewmDeGpabE'
    chat_id = "-1002527661703"  # ID –∫–∞–Ω–∞–ª–∞
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }
    response = requests.post(url, data=payload)
    if response.status_code != 200:
        print("‚ùóÔ∏è–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª:", response.text)


def load_previous_events():
    if not os.path.exists("events.json") or os.stat("events.json").st_size == 0:
        return []
    with open("events.json", "r", encoding="utf-8") as f:
        try:
            return json.load(f)
        except json.JSONDecodeError:
            return []


def save_current_events(events):
    with open(FILENAME, "w", encoding="utf-8") as f:
        json.dump(events, f, ensure_ascii=False, indent=2)


def event_key(event):
    # –ö–ª—é—á, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è
    return f"{event['–ù–∞–∑–≤–∞–Ω–∏–µ']}|{event['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è']}|{event['–°—Å—ã–ª–∫–∞']}"


def sort_events_alphabetically(events):
    return sorted(events, key=lambda e: e["–ù–∞–∑–≤–∞–Ω–∏–µ"].lower())


def fetch_with_handling(url, headers):
    try:
        response = requests.get(url, headers=headers, allow_redirects=False)
        if response.status_code == 302:
            print("–ü—Ä–æ–∏–∑–æ—à–µ–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç, —Å–ª–µ–¥—É–µ–º –ø–æ –Ω–æ–≤–æ–º—É –∞–¥—Ä–µ—Å—É:", response.headers["Location"])
            url = response.headers["Location"]
            response = requests.get(url, headers=headers)

        if response.status_code == 403:
            print("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω (403). –í–æ–∑–º–æ–∂–Ω–æ, —Å–∞–π—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–ª –±–æ—Ç–∞.")
            send_telegram_channel("‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –ø–æ–ª—É—á–∏–ª –∫–æ–¥ 403 (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω). –ü—Ä–æ–≤–µ—Ä—å —Ä–∞–±–æ—Ç—É –ø–∞—Ä—Å–µ—Ä–∞.")
            return None

        if response.status_code == 429:
            print("‚è± –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (429). –ù—É–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É.")
            send_telegram_channel("‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –ø–æ–ª—É—á–∏–ª –∫–æ–¥ 429 (—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤).")
            return None

        if not response.ok:
            print(f"‚ö†Ô∏è –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–π –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            return None
        return response
    except Exception as e:
        print(f"‚ùóÔ∏è–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
        send_telegram_channel(f"‚ùóÔ∏è–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None


# === –ü–∞—Ä—Å–∏–Ω–≥ ===

url = "https://comedyconcert.ru"

# moscow_tz = pytz.timezone('Europe/Moscow')
# now_utc = datetime.datetime.now(pytz.utc)
# dt = now_utc.astimezone(moscow_tz)
# message = '{0:%H:%M} ‚Äî {0:%d.%m.%Y}\n\n'.format(dt)
# headers = {
#     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
# }

user_agents = [
    # Chrome Windows
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
    # Chrome Mac
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 13_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
    # Firefox Windows
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0",
    # Firefox Mac
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 12.5; rv:118.0) Gecko/20100101 Firefox/118.0",
    # Safari iPhone
    "Mozilla/5.0 (iPhone; CPU iPhone OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1",
    # Edge Windows
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0"
]

# –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π User-Agent
headers = {
    "User-Agent": random.choice(user_agents)
}
print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è User-Agent:", headers["User-Agent"])


response = requests.get(url, headers=headers, allow_redirects=False)
response = fetch_with_handling(url, headers)
if response is None:
    exit()

soup = BeautifulSoup(response.content, "html.parser")

keywords = ["–∏–º–ø—Ä–æ–≤", "improv", "–∏—Å—Ç–æ—Ä–∏–∏", "—à–æ—É –∏–∑ —à–æ—É",
            "—à–∞—Å—Ç—É–Ω", "–ø–æ–ø–æ–≤", "–º–∞—Ç–≤–∏–µ–Ω–∫–æ", "–ø–æ–∑–æ–≤",
            "–º—ã—Å–ª–∏ –≤—Å–ª—É—Ö", "–Ω–µ–∏–≥—Ä—ã", "–æ—Ç—ã–¥–æ", "–º–∏–Ω—Å–∫–∏",
            "–≥–æ—Ä–æ—Ö", "–∑–∞—è—Ü", "–∑–∞–π—Ü–∞", "—à–µ–≤–µ–ª–µ–≤", "–≥–∞—É—Å"]
cards = soup.find_all("div", class_="event__list__card")

events = []

# = –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
for card in cards:
    try:
        title_tag = card.select_one("a.event__list__card__title")
        title = title_tag.get_text(strip=True) if title_tag else "‚Äî"

        if not any(keyword in title.lower() for keyword in keywords):
            continue

        city_tag = card.select_one("div.event__list__card__playground_info__title.font-bold")
        city = city_tag.get_text(strip=True) if city_tag else "‚Äî"

        date_tag = card.select_one("div.event__list__card__date")
        time_tag = card.select_one("div.event__list__card__time_group")
        datetime_str = f"{date_tag.text.strip()} {time_tag.text.strip()}" if date_tag and time_tag else "‚Äî"

        link_tag = card.select_one("a.event__list__card__title")
        relative_link = link_tag.get("href") if link_tag else ""
        full_link = f"https://comedyconcert.ru{relative_link}" if relative_link else "‚Äî"

        events.append({
            "–ù–∞–∑–≤–∞–Ω–∏–µ": title,
            "–ì–æ—Ä–æ–¥": city,
            "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è": datetime_str,
            "–°—Å—ã–ª–∫–∞": full_link
        })
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ä—Ç–æ—á–∫–∏:", e)

# = –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
events = sort_events_alphabetically(events)

# = –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ Github Actions) =
previous_events = load_previous_events()
previous_keys = set(event_key(e) for e in previous_events)
current_keys = set(event_key(e) for e in events)

new_keys = current_keys - previous_keys
new_events = [e for e in events if event_key(e) in new_keys]

if new_events:
    message = f"–ù–∞–π–¥–µ–Ω–æ {len(new_events)} –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:\n"
    for event in new_events:
        message += (
            f"<b>üé≠ {event['–ù–∞–∑–≤–∞–Ω–∏–µ']}</b>\n"
            f"üìç <b>{event['–ì–æ—Ä–æ–¥']}</b>\n"
            f"üïí {event['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è']}\n"
            f"üîó {event['–°—Å—ã–ª–∫–∞']}"
            '\n\n'
        )

else:
    message += "‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ:\n <blockquote>"

    for event in previous_events:
        message += (
            f"üé≠ {event['–ù–∞–∑–≤–∞–Ω–∏–µ']}\n"
            f"üìç {event['–ì–æ—Ä–æ–¥']}\n"
            f"üïí {event['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è']}\n"
            f"üîó {event['–°—Å—ã–ª–∫–∞']}\n\n"
        )
    message += '</blockquote>'

send_telegram_channel(message)

#–û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª
save_current_events(events)
