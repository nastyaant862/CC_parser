import requests
from bs4 import BeautifulSoup
import datetime

url = "https://comedyconcert.ru"

dt = datetime.datetime.now()
print('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ {0:%H:%M} - {0:%d.%m.%Y}\n'.format(dt))

# –û—Ç–ø—Ä–∞–≤–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∞–≥–µ–Ω—Ç–æ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
}

# –í—ã–ø–æ–ª–Ω–∏–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
response = requests.get(url, headers=headers, allow_redirects=False)

# –ü—Ä–æ–≤–µ—Ä–∏–º, –±—ã–ª –ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
if response.status_code == 302:
    print("–ü—Ä–æ–∏–∑–æ—à–µ–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç, —Å–ª–µ–¥—É–µ–º –ø–æ –Ω–æ–≤–æ–º—É –∞–¥—Ä–µ—Å—É:", response.headers["Location"])
    url = response.headers["Location"]

# –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
response = requests.get(url, headers=headers)

# –¢–µ–ø–µ—Ä—å –ø–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–º–æ—â—å—é BeautifulSoup
soup = BeautifulSoup(response.content, "html.parser")

keywords = ["–∏–º–ø—Ä–æ–≤", "improv", "–∏—Å—Ç–æ—Ä–∏–∏", "—à–æ—É –∏–∑ —à–æ—É", "—à–∞—Å—Ç—É–Ω", "–ø–æ–ø–æ–≤", "–º–∞—Ç–≤–∏–µ–Ω–∫–æ", "–ø–æ–∑–æ–≤"]

cards = soup.find_all("div", class_="event__list__card")
#print(f"üîç –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(cards)}")

events = []

for card in cards:
    try:
        title_tag = card.select_one("a.event__list__card__title")
        title = title_tag.get_text(strip=True) if title_tag else "‚Äî"

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        if not any(keyword in title.lower() for keyword in keywords):
            continue  # –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        city_tag = card.select_one("div.event__list__card__playground_info__title.font-bold")
        city = city_tag.get_text(strip=True) if city_tag else "‚Äî"

        date_tag = card.select_one("div.event__list__card__date")
        time_tag = card.select_one("div.event__list__card__time_group")
        datetime = f"{date_tag.text.strip()} {time_tag.text.strip()}" if date_tag and time_tag else "‚Äî"

        link_tag = card.select_one("a.event__list__card__title")
        relative_link = link_tag.get("href") if link_tag else ""
        full_link = f"https://comedyconcert.ru{relative_link}" if relative_link else "‚Äî"

        events.append({
            "–ù–∞–∑–≤–∞–Ω–∏–µ": title,
            "–ì–æ—Ä–æ–¥": city,
            "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è": datetime,
            "–°—Å—ã–ª–∫–∞": full_link
        })
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ä—Ç–æ—á–∫–∏:", e)

if not events:
    print("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
else:
    print(f'–ù–∞–π–¥–µ–Ω–æ {len(events)} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.')
    for event in events:
        print(f"\nüé≠ {event['–ù–∞–∑–≤–∞–Ω–∏–µ']}")
        print(f"üìç –ì–æ—Ä–æ–¥: {event['–ì–æ—Ä–æ–¥']}")
        print(f"üïí –í—Ä–µ–º—è: {event['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è']}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {event['–°—Å—ã–ª–∫–∞']}")
